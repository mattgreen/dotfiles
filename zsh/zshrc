#zmodload zsh/zprof

# Initialize completions
autoload -Uz compinit
compinit -C -d

# zsh config
setopt APPEND_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS

HISTFILE=~/.zsh_history
HISTSIZE=4000
SAVEHIST=4000

# Favor Homebrew binaries over system
typeset -U path
path=(/usr/local/bin /usr/local/sbin $path)

# Aliases
alias ls='ls -GF'
alias ll='ls -lha'
alias ..='cd ..'
alias ...='cd ../..'
alias reload!='. ~/.zshrc'

alias gs='git status -s'

alias bench_dotfiles='time (repeat 10 zsh -is </dev/null)'

# Set window/tab titles
set_cmd_titles() {
    local tabtitle="${PWD##*/}"
    echo -ne "\e]1;${tabtitle: -24}\a"
    echo -ne "\e]2;$PWD\a"
}

set_exec_titles() {
    echo -ne "\e]1;$2\a"
    echo -ne "\e]2;$PWD\a"
}

autoload -Uz add-zsh-hook
add-zsh-hook precmd set_cmd_titles
add-zsh-hook preexec set_exec_titles

# Prompt
source gitstatus/gitstatus.plugin.zsh
gitstatus_stop PROMPT && gitstatus_start -s -1 -u -1 -c -1 -d -1 PROMPT

autoload -Uz colors && colors

function prompt() {
    local git_info=""
    if gitstatus_query PROMPT && [[ $VCS_STATUS_RESULT == ok-sync ]]; then
        local branch=${${VCS_STATUS_LOCAL_BRANCH:-@${VCS_STATUS_COMMIT}}//\%/%%}
        local dirty=""

        if [ "$VCS_STATUS_HAS_STAGED" = 1 ] || [ "$VCS_STATUS_HAS_UNSTAGED" = 1 ] || [ "$VCS_STATUS_HAS_UNTRACKED" = 1 ]
        then
            dirty=' •'
        fi

        git_info=" on %{$fg[cyan]%}${branch}${dirty}%{$reset_color%}"
    fi

    local newline=$'\n'
    PROMPT="${newline}%{$fg[green]%}%~%{$reset_color%}${git_info}${newline}❯ "
    setopt noprompt{bang,subst} promptpercent
}

add-zsh-hook precmd prompt

# Jump to project directories
function jump() {
    cd ~/Projects/$1
}

function _jump() {
    _directories -W ~/Projects
}

alias j='jump'
compdef _jump jump

# Rust
if [[ -d ~/.cargo/bin ]]; then
    path=(~/.cargo/bin $path)
fi

#zprof